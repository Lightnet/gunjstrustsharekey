!function(){var e="undefined"!=typeof window?window.Gun:require("gun/gun");e.on("opt",function(e){e.opt.sharekeytype="path",e.opt.sharekeydebug=!1,e.opt.sharekeyvalue="value",e.opt.sharekeytrust="trust",e.opt.sharekeybbase=!0,this.to.next(e)});var t=e.User.prototype.grantkey=async function(e,t,a){console.log("`.grantkey` PROTOTYPE API MAY BE CHANGED OR RENAMED USE!"),t=t||function(e){return e},a=a||{};let r=this,s=r.back(-1).user(),o=s._.sea,y="";return r.back(function(e){e.is||(y+=e.get||"")}),a.sharekeytype=a.sharekeytype||r._.root.opt.sharekeytype,a.sharekeydebug=a.sharekeydebug||r._.root.opt.sharekeydebug,a.sharekeyvalue=a.sharekeyvalue||r._.root.opt.sharekeyvalue,a.sharekeytrust=a.sharekeytrust||r._.root.opt.sharekeytrust,a.sharekeybbase=a.sharekeybbase||r._.root.opt.sharekeybbase,async function(){let h,g;a.sharekeydebug&&console.log("opt.sharekeytype: ",a.sharekeytype),"path"==a.sharekeytype&&(g=await s.get(a.sharekeytrust).get(o.pub).get(y).then(),a.sharekeydebug&&console.log("SECRET: ",g),(g=await SEA.decrypt(g,o))||(g=SEA.random(16).toString(),a.sharekeydebug&&console.log("CREATE SECRET: ",g),h=await SEA.encrypt(g,o),s.get(a.sharekeytrust).get(o.pub).get(y).put(h))),"graph"==a.sharekeytype&&(g=await r.get(a.sharekeytrust).get(o.pub).get(r._.get).then(),a.sharekeydebug&&console.log("SECRET: ",g),null!=g&&(a.sharekeybbase&&(g=window.atob(g)),g=JSON.parse(g)),(g=await SEA.decrypt(g,o))||(g=SEA.random(16).toString(),a.sharekeydebug&&console.log("CREATE SECRET: ",g),h=await SEA.encrypt(g,o),h=JSON.stringify(h),a.sharekeybbase&&(h=window.btoa(h)),r.get(a.sharekeytrust).get(o.pub).get(r._.get).put(h)));let u=await e.get("pub").then(),n=await e.get("epub").then();u=await u,n=await n;let k=await SEA.secret(n,o);h=await SEA.encrypt(g,k),"path"==a.sharekeytype&&(a.sharekeydebug&&console.log("TO sec: ",h),s.get(a.sharekeytrust).get(u).get(y).put(h,t)),"graph"==a.sharekeytype&&(h=JSON.stringify(h),a.sharekeybbase&&(h=window.btoa(h)),a.sharekeydebug&&console.log("TO sec: ",h),r.get(a.sharekeytrust).get(u).get(r._.get).put(h,t))}(),r};e.chain.grantkey=t;var a=e.User.prototype.revokekey=async function(e,t,a){console.log("`.revokekey` PROTOTYPE API MAY BE CHANGED OR RENAMED USE!"),t=t||function(e){return e},a=a||{};let r=this,s=r.back(-1).user(),o=s._.sea,y="";return r.back(function(e){e.is||(y+=e.get||"")}),e||console.log("to User not set!"),a.sharekeytype=a.sharekeytype||r._.root.opt.sharekeytype,a.sharekeydebug=a.sharekeydebug||r._.root.opt.sharekeydebug,a.sharekeyvalue=a.sharekeyvalue||r._.root.opt.sharekeyvalue,a.sharekeytrust=a.sharekeytrust||r._.root.opt.sharekeytrust,a.sharekeybbase=a.sharekeybbase||r._.root.opt.sharekeybbase,async function(){let h,g,u,n,k;if(a.sharekeydebug&&console.log("opt.sharekeytype: ",a.sharekeytype),!await e.get("alias").then())return t({err:"Error alias not found!"}),r;"path"==a.sharekeytype&&(u=await s.get(a.sharekeytrust).get(o.pub).get(y).then(),a.sharekeydebug&&console.log("SECRET: ",u),u=await SEA.decrypt(u,o),n=await r.once().then(),k=await SEA.decrypt(n,u)),"graph"==a.sharekeytype&&(u=await r.get(a.sharekeytrust).get(o.pub).get(r._.get).then(),a.sharekeydebug&&console.log("SECRET: ",u),null!=u&&(a.sharekeybbase&&(u=window.atob(u)),u=JSON.parse(u)),u=await SEA.decrypt(u,o),n=await r.get(a.sharekeyvalue).once().then(),a.sharekeybbase&&(n=window.atob(n)),n=JSON.parse(n),k=await SEA.decrypt(n,u)),a.sharekeydebug&&console.log("VALUE: ",k),u=SEA.random(16).toString(),g=await SEA.encrypt(u,o),"path"==a.sharekeytype&&(s.get(a.sharekeytrust).get(o.pub).get(y).put(g),h=await e.get("pub").then(),s.get(a.sharekeytrust).once().map().once(async(e,t)=>{let g;if(a.sharekeydebug&&(g=await r.back(-1).user(t).get("alias").then()),o.pub!=t)if(h==t)a.sharekeydebug&&console.log(g,"FAIL");else{let e=await s.get(a.sharekeytrust).get(t).get(y).then();if(a.sharekeydebug&&console.log(g,"PASS"),"null"!=e){a.sharekeydebug&&console.log(g,"CREATE NEW SALT SHARE KEY ");let e=r.back(-1).user(t),h=await e.get("pub").then(),n=await e.get("epub").then(),k=await SEA.secret(n,o),p=await SEA.encrypt(u,k);a.sharekeydebug&&console.log("NEW SHARE KEY: ",p),s.get(a.sharekeytrust).get(h).get(y).put(p)}}})),"graph"==a.sharekeytype&&(g=JSON.stringify(g),g=window.btoa(g),r.get(a.sharekeytrust).get(o.pub).get(r._.get).put(g),h=await e.get("pub").then(),r.get(a.sharekeytrust).map().once(async(e,t)=>{let s;if(a.sharekeydebug&&(s=await r.back(-1).user(t).get("alias").then()),o.pub!=t)if(h==t)a.sharekeydebug&&console.log(s,"FAIL");else{let e=await r.get(a.sharekeytrust).get(n).get(r._.get).then();if(a.sharekeydebug&&console.log(s,"PASS"),"null"!=e){a.sharekeydebug&&console.log(s,"NEW SHARE KEY!");let e=r.back(-1).user(t),y=await e.get("pub").then(),h=await e.get("epub").then(),g=await SEA.secret(h,o),n=await SEA.encrypt(u,g);n=JSON.stringify(n),a.sharekeybbase&&(n=window.btoa(n)),a.sharekeydebug&&console.log("NEW SHARE KEY: ",n),r.get(a.sharekeytrust).get(y).get(r._.get).put(n)}}}));let p=await SEA.encrypt(k,u);"path"==a.sharekeytype&&r.put(p,t),"graph"==a.sharekeytype&&(p=JSON.stringify(p),a.sharekeybbase&&(p=window.btoa(p)),r.get(a.sharekeyvalue).put(p,t)),h=await e.get("pub").then(),"path"==a.sharekeytype&&s.get(a.sharekeytrust).get(h).get(y).put("null",t),"graph"==a.sharekeytype&&r.get(a.sharekeytrust).get(h).get(r._.get).put("null",t)}(),r};e.chain.revokekey=a;var r=e.User.prototype.encryptput=function(e,t,a){console.log("`.encryptput` PROTOTYPE API MAY BE CHANGED OR RENAMED USE!"),t=t||function(e){return e},a=a||{};let r=this,s=r.back(-1).user(),o=s._.sea,y="";return r.back(function(e){e.is||(y+=e.get||"")}),a.sharekeytype=a.sharekeytype||r._.root.opt.sharekeytype,a.sharekeydebug=a.sharekeydebug||r._.root.opt.sharekeydebug,a.sharekeyvalue=a.sharekeyvalue||r._.root.opt.sharekeyvalue,a.sharekeytrust=a.sharekeytrust||r._.root.opt.sharekeytrust,a.sharekeybbase=a.sharekeybbase||r._.root.opt.sharekeybbase,async function(){let h,g;a.sharekeydebug&&console.log("opt.sharekeytype: ",a.sharekeytype),"path"==a.sharekeytype&&(g=await s.get(a.sharekeytrust).get(o.pub).get(y).then(),a.sharekeydebug&&console.log("SECRET: ",g),(g=await SEA.decrypt(g,o))||(g=SEA.random(16).toString(),a.sharekeydebug&&console.log("CREATE SECRET: ",g),h=await SEA.encrypt(g,o),s.get(a.sharekeytrust).get(o.pub).get(y).put(h)),h=await SEA.encrypt(e,g),r.put(h,t)),"graph"==a.sharekeytype&&(g=await r.get(a.sharekeytrust).get(o.pub).get(r._.get).then(),a.sharekeydebug&&console.log("SECRET: ",g),null!=g&&(a.sharekeybbase&&(g=window.atob(g)),g=JSON.parse(g),g=await SEA.decrypt(g,o)),g||(g=SEA.random(16).toString(),a.sharekeydebug&&console.log("CREATE SECRET: ",g),h=await SEA.encrypt(g,o),h=JSON.stringify(h),a.sharekeybbase&&(h=window.btoa(h)),a.sharekeydebug&&console.log("SECRET ENC: ",h),r.get(a.sharekeytrust).get(o.pub).get(r._.get).put(h)),a.sharekeydebug&&console.log("DATA: ",e),h=await SEA.encrypt(e,g),h=JSON.stringify(h),a.sharekeybbase&&(h=window.btoa(h)),r.get(a.sharekeyvalue).put(h,t))}(),r};e.chain.encryptput=r;var s=e.User.prototype.decryptvalue=function(e,t){console.log("`.decryptvalue` PROTOTYPE API MAY BE CHANGED OR RENAMED USE!"),e=e||function(e){return e},t=t||{};let a=this,r=a.back(-1).user(),s=r._.sea,o="";return t.sharekeytype=t.sharekeytype||a._.root.opt.sharekeytype,t.sharekeydebug=t.sharekeydebug||a._.root.opt.sharekeydebug,t.sharekeyvalue=t.sharekeyvalue||a._.root.opt.sharekeyvalue,t.sharekeytrust=t.sharekeytrust||a._.root.opt.sharekeytrust,t.sharekeybbase=t.sharekeybbase||a._.root.opt.sharekeybbase,a.back(function(e){e.is||(o+=e.get||"")}),async function(){let y,h;if(t.sharekeydebug&&console.log("opt.sharekeytype: ",t.sharekeytype),"path"==t.sharekeytype){if(y=await r.get(t.sharekeytrust).get(s.pub).get(o).then(),t.sharekeydebug&&console.log("SECRET: ",y),!y)return e(null),a;y=await SEA.decrypt(y,s),h=await a.then()}if("graph"==t.sharekeytype){if(y=await a.get(t.sharekeytrust).get(s.pub).get(a._.get).then(),t.sharekeydebug&&console.log("SECRET: ",y),!y)return e(null),a;t.sharekeybbase&&(y=window.atob(y)),y=JSON.parse(y),y=await SEA.decrypt(y,s),h=await a.get(t.sharekeyvalue).then(),t.sharekeydebug&&console.log("VALUE SEC: ",h),null!=h&&(t.sharekeybbase&&(h=window.atob(h)),h=JSON.parse(h))}let g=await SEA.decrypt(h,y);t.sharekeydebug&&console.log("VALUE: ",g),e(g)}(),a};e.chain.decryptvalue=s;var o=e.User.prototype.decryptdata=function(e,t,a){console.log("`.decryptdata` PROTOTYPE API MAY BE DELETED OR CHANGED OR RENAMED USE!"),t=t||function(e){return e},a=a||{};let r=this,s=r.back(-1).user()._.sea,o="";return a.sharekeytype=a.sharekeytype||r._.root.opt.sharekeytype,a.sharekeydebug=a.sharekeydebug||r._.root.opt.sharekeydebug,a.sharekeyvalue=a.sharekeyvalue||r._.root.opt.sharekeyvalue,a.sharekeytrust=a.sharekeytrust||r._.root.opt.sharekeytrust,a.sharekeybbase=a.sharekeybbase||r._.root.opt.sharekeybbase,e?(r.back(function(e){e.is||(o+=e.get||"")}),async function(){let y;if(a.sharekeydebug&&console.log("opt.sharekeytype: ",a.sharekeytype),"path"==a.sharekeytype&&(y=await e.get("trust").get(s.pub).get(o).then(),a.sharekeydebug&&console.log("SECRET: ",y)),"graph"==a.sharekeytype&&(y=await r.get("trust").get(s.pub).get(r._.get).then(),a.sharekeydebug&&console.log("SECRET: ",y),null!=y)){if("null"==y)return console.log("Error Null || Denied!"),t(null),r;a.sharekeybbase&&(y=window.atob(y)),y=JSON.parse(y)}if(!y)return console.log("Error Null || Denied!"),t(null),r;let h,g=await e.get("epub").then(),u=await SEA.secret(g,s),n=await SEA.decrypt(y,u);a.sharekeydebug&&console.log("key: ",n),"path"==a.sharekeytype&&(h=await r.then(),a.sharekeydebug&&console.log("VALUE sec: ",h)),"graph"==a.sharekeytype&&(h=await r.get(a.sharekeyvalue).then(),a.sharekeydebug&&console.log("VALUE sec: ",h),a.sharekeybbase&&(h=window.atob(h)),h=JSON.parse(h));let k=await SEA.decrypt(h,n);a.sharekeydebug&&console.log("VALUE: ",k),t(k)}(),r):(t({err:"User not set!"}),console.log("User graph net set!"),r)};e.chain.decryptdata=o}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,