!function(){var e="undefined"!=typeof window?window.Gun:require("gun/gun");e.on("opt",function(e){e.opt.sharekeydebug=!0,e.opt.sharekeyvalue="value",e.opt.sharekeytrust="trust",e.opt.sharekeybbase=!0,this.to.next(e)}),e.chain.grantkey=function(t,a,r){console.log("`.grantkey` PROTOTYPE API MAY BE CHANGED OR RENAMED USE!"),a=a||function(e){return e},r=r||{};let s=this,o=s.back(-1).user(),y=o._.sea,h="";return s.back(function(e){e.is||(h+=e.get||"")}),r.sharekeydebug=r.sharekeydebug||s._.root.opt.sharekeydebug,r.sharekeyvalue=r.sharekeyvalue||s._.root.opt.sharekeyvalue,r.sharekeytrust=r.sharekeytrust||s._.root.opt.sharekeytrust,r.sharekeybbase=r.sharekeybbase||s._.root.opt.sharekeybbase,s._.$ instanceof e.User?r.sharekeytype="path":r.sharekeytype="graph",async function(){let e,g;r.sharekeydebug&&console.log("opt.sharekeytype: ",r.sharekeytype),"path"==r.sharekeytype&&(g=await o.get(r.sharekeytrust).get(y.pub).get(h).then(),r.sharekeydebug&&console.log("SECRET: ",g),(g=await SEA.decrypt(g,y))||(g=SEA.random(16).toString(),r.sharekeydebug&&console.log("CREATE SECRET: ",g),e=await SEA.encrypt(g,y),o.get(r.sharekeytrust).get(y.pub).get(h).put(e))),"graph"==r.sharekeytype&&(g=await s.get(r.sharekeytrust).get(y.pub).get(s._.get).then(),r.sharekeydebug&&console.log("SECRET: ",g),null!=g&&(r.sharekeybbase&&(g=window.atob(g)),g=JSON.parse(g)),(g=await SEA.decrypt(g,y))||(g=SEA.random(16).toString(),r.sharekeydebug&&console.log("CREATE SECRET: ",g),e=await SEA.encrypt(g,y),e=JSON.stringify(e),r.sharekeybbase&&(e=window.btoa(e)),s.get(r.sharekeytrust).get(y.pub).get(s._.get).put(e)));let n=await t.get("pub").then(),u=await t.get("epub").then();n=await n,u=await u;let k=await SEA.secret(u,y);e=await SEA.encrypt(g,k),"path"==r.sharekeytype&&(r.sharekeydebug&&console.log("TO sec: ",e),o.get(r.sharekeytrust).get(n).get(h).put(e,a)),"graph"==r.sharekeytype&&(e=JSON.stringify(e),r.sharekeybbase&&(e=window.btoa(e)),r.sharekeydebug&&console.log("TO sec: ",e),s.get(r.sharekeytrust).get(n).get(s._.get).put(e,a))}(),s},e.chain.revokekey=function(t,a,r){console.log("`.revokekey` PROTOTYPE API MAY BE CHANGED OR RENAMED USE!"),a=a||function(e){return e},r=r||{};let s=this,o=s.back(-1).user(),y=o._.sea,h="";return s.back(function(e){e.is||(h+=e.get||"")}),t||console.log("to User not set!"),r.sharekeydebug=r.sharekeydebug||s._.root.opt.sharekeydebug,r.sharekeyvalue=r.sharekeyvalue||s._.root.opt.sharekeyvalue,r.sharekeytrust=r.sharekeytrust||s._.root.opt.sharekeytrust,r.sharekeybbase=r.sharekeybbase||s._.root.opt.sharekeybbase,s._.$ instanceof e.User?r.sharekeytype="path":r.sharekeytype="graph",async function(){let e,g,n,u,k;if(r.sharekeydebug&&console.log("opt.sharekeytype: ",r.sharekeytype),!await t.get("alias").then())return a({err:"Error alias not found!"}),s;"path"==r.sharekeytype&&(n=await o.get(r.sharekeytrust).get(y.pub).get(h).then(),r.sharekeydebug&&console.log("SECRET: ",n),n=await SEA.decrypt(n,y),u=await s.once().then(),k=await SEA.decrypt(u,n)),"graph"==r.sharekeytype&&(n=await s.get(r.sharekeytrust).get(y.pub).get(s._.get).then(),r.sharekeydebug&&console.log("SECRET: ",n),null!=n&&(r.sharekeybbase&&(n=window.atob(n)),n=JSON.parse(n)),n=await SEA.decrypt(n,y),u=await s.get(r.sharekeyvalue).once().then(),r.sharekeybbase&&(u=window.atob(u)),u=JSON.parse(u),k=await SEA.decrypt(u,n)),r.sharekeydebug&&console.log("VALUE: ",k),n=SEA.random(16).toString(),g=await SEA.encrypt(n,y),"path"==r.sharekeytype&&(o.get(r.sharekeytrust).get(y.pub).get(h).put(g),e=await t.get("pub").then(),o.get(r.sharekeytrust).once().map().once(async(t,a)=>{let g;if(r.sharekeydebug&&(g=await s.back(-1).user(a).get("alias").then()),y.pub!=a)if(e==a)r.sharekeydebug&&console.log(g,"FAIL");else{let e=await o.get(r.sharekeytrust).get(a).get(h).then();if(r.sharekeydebug&&console.log(g,"PASS"),"null"!=e){r.sharekeydebug&&console.log(g,"CREATE NEW SALT SHARE KEY ");let e=s.back(-1).user(a),t=await e.get("pub").then(),u=await e.get("epub").then(),k=await SEA.secret(u,y),p=await SEA.encrypt(n,k);r.sharekeydebug&&console.log("NEW SHARE KEY: ",p),o.get(r.sharekeytrust).get(t).get(h).put(p)}}})),"graph"==r.sharekeytype&&(g=JSON.stringify(g),g=window.btoa(g),s.get(r.sharekeytrust).get(y.pub).get(s._.get).put(g),e=await t.get("pub").then(),s.get(r.sharekeytrust).map().once(async(t,a)=>{let o;if(r.sharekeydebug&&(o=await s.back(-1).user(a).get("alias").then()),y.pub!=a)if(e==a)r.sharekeydebug&&console.log(o,"FAIL");else{let e=await s.get(r.sharekeytrust).get(u).get(s._.get).then();if(r.sharekeydebug&&console.log(o,"PASS"),"null"!=e){r.sharekeydebug&&console.log(o,"NEW SHARE KEY!");let e=s.back(-1).user(a),t=await e.get("pub").then(),h=await e.get("epub").then(),g=await SEA.secret(h,y),u=await SEA.encrypt(n,g);u=JSON.stringify(u),r.sharekeybbase&&(u=window.btoa(u)),r.sharekeydebug&&console.log("NEW SHARE KEY: ",u),s.get(r.sharekeytrust).get(t).get(s._.get).put(u)}}}));let p=await SEA.encrypt(k,n);"path"==r.sharekeytype&&s.put(p,a),"graph"==r.sharekeytype&&(p=JSON.stringify(p),r.sharekeybbase&&(p=window.btoa(p)),s.get(r.sharekeyvalue).put(p,a)),e=await t.get("pub").then(),"path"==r.sharekeytype&&o.get(r.sharekeytrust).get(e).get(h).put("null",a),"graph"==r.sharekeytype&&s.get(r.sharekeytrust).get(e).get(s._.get).put("null",a)}(),s},e.chain.encryptput=function(t,a,r){console.log("`.encryptput` PROTOTYPE API MAY BE CHANGED OR RENAMED USE!"),a=a||function(e){return e},r=r||{};let s=this,o=s.back(-1).user(),y=o._.sea,h="";return s.back(function(e){e.is||(h+=e.get||"")}),r.sharekeydebug=r.sharekeydebug||s._.root.opt.sharekeydebug,r.sharekeyvalue=r.sharekeyvalue||s._.root.opt.sharekeyvalue,r.sharekeytrust=r.sharekeytrust||s._.root.opt.sharekeytrust,r.sharekeybbase=r.sharekeybbase||s._.root.opt.sharekeybbase,s._.$ instanceof e.User?r.sharekeytype="path":r.sharekeytype="graph",async function(){let e,g;r.sharekeydebug&&console.log("opt.sharekeytype: ",r.sharekeytype),"path"==r.sharekeytype&&(g=await o.get(r.sharekeytrust).get(y.pub).get(h).then(),r.sharekeydebug&&console.log("SECRET: ",g),(g=await SEA.decrypt(g,y))||(g=SEA.random(16).toString(),r.sharekeydebug&&console.log("CREATE SECRET: ",g),e=await SEA.encrypt(g,y),o.get(r.sharekeytrust).get(y.pub).get(h).put(e)),e=await SEA.encrypt(t,g),s.put(e,a)),"graph"==r.sharekeytype&&(g=await s.get(r.sharekeytrust).get(y.pub).get(s._.get).then(),r.sharekeydebug&&console.log("SECRET: ",g),null!=g&&(r.sharekeybbase&&(g=window.atob(g)),g=JSON.parse(g),g=await SEA.decrypt(g,y)),g||(g=SEA.random(16).toString(),r.sharekeydebug&&console.log("CREATE SECRET: ",g),e=await SEA.encrypt(g,y),e=JSON.stringify(e),r.sharekeybbase&&(e=window.btoa(e)),r.sharekeydebug&&console.log("SECRET ENC: ",e),s.get(r.sharekeytrust).get(y.pub).get(s._.get).put(e)),r.sharekeydebug&&console.log("DATA: ",t),e=await SEA.encrypt(t,g),e=JSON.stringify(e),r.sharekeybbase&&(e=window.btoa(e)),s.get(r.sharekeyvalue).put(e,a))}(),s},e.chain.decryptvalue=function(t,a){console.log("`.decryptvalue` PROTOTYPE API MAY BE CHANGED OR RENAMED USE!"),t=t||function(e){return e},a=a||{};let r=this,s=r.back(-1).user(),o=s._.sea,y="";return a.sharekeydebug=a.sharekeydebug||r._.root.opt.sharekeydebug,a.sharekeyvalue=a.sharekeyvalue||r._.root.opt.sharekeyvalue,a.sharekeytrust=a.sharekeytrust||r._.root.opt.sharekeytrust,a.sharekeybbase=a.sharekeybbase||r._.root.opt.sharekeybbase,r.back(function(e){e.is||(y+=e.get||"")}),r._.$ instanceof e.User?a.sharekeytype="path":a.sharekeytype="graph",async function(){let e,h;if(a.sharekeydebug&&console.log("opt.sharekeytype: ",a.sharekeytype),"path"==a.sharekeytype){if(e=await s.get(a.sharekeytrust).get(o.pub).get(y).then(),a.sharekeydebug&&console.log("SECRET: ",e),!e)return t(null),r;e=await SEA.decrypt(e,o),h=await r.then()}if("graph"==a.sharekeytype){if(e=await r.get(a.sharekeytrust).get(o.pub).get(r._.get).then(),a.sharekeydebug&&console.log("SECRET: ",e),!e)return t(null),r;a.sharekeybbase&&(e=window.atob(e)),e=JSON.parse(e),e=await SEA.decrypt(e,o),h=await r.get(a.sharekeyvalue).then(),a.sharekeydebug&&console.log("VALUE SEC: ",h),null!=h&&(a.sharekeybbase&&(h=window.atob(h)),h=JSON.parse(h))}let g=await SEA.decrypt(h,e);a.sharekeydebug&&console.log("VALUE: ",g),t(g)}(),r},e.chain.decryptdata=function(t,a,r){console.log("`.decryptdata` PROTOTYPE API MAY BE DELETED OR CHANGED OR RENAMED USE!"),a=a||function(e){return e},r=r||{};let s=this,o=s.back(-1).user()._.sea,y="";return r.sharekeydebug=r.sharekeydebug||s._.root.opt.sharekeydebug,r.sharekeyvalue=r.sharekeyvalue||s._.root.opt.sharekeyvalue,r.sharekeytrust=r.sharekeytrust||s._.root.opt.sharekeytrust,r.sharekeybbase=r.sharekeybbase||s._.root.opt.sharekeybbase,t?(console.log(r.sharekeydebug),s._.$ instanceof e.User?r.sharekeytype=r.sharekeytype||"path":r.sharekeytype=r.sharekeytype||"graph",s.back(function(e){e.is||(y+=e.get||"")}),async function(){let e;if(r.sharekeydebug&&console.log("opt.sharekeytype: ",r.sharekeytype),"path"==r.sharekeytype&&(e=await t.get("trust").get(o.pub).get(y).then(),r.sharekeydebug&&console.log("SECRET: ",e)),"graph"==r.sharekeytype&&(e=await s.get("trust").get(o.pub).get(s._.get).then(),r.sharekeydebug&&console.log("SECRET: ",e),null!=e)){if("null"==e)return console.log("Error Null || Denied!"),a(null),s;r.sharekeybbase&&(e=window.atob(e)),e=JSON.parse(e)}if(!e)return console.log("Error Null || Denied!"),a(null),s;let h,g=await t.get("epub").then(),n=await SEA.secret(g,o),u=await SEA.decrypt(e,n);r.sharekeydebug&&console.log("key: ",u),"path"==r.sharekeytype&&(h=await s.then(),r.sharekeydebug&&console.log("VALUE sec: ",h)),"graph"==r.sharekeytype&&(h=await s.get(r.sharekeyvalue).then(),r.sharekeydebug&&console.log("VALUE sec: ",h),r.sharekeybbase&&(h=window.atob(h)),h=JSON.parse(h));let k=await SEA.decrypt(h,u);r.sharekeydebug&&console.log("VALUE: ",k),a(k)}(),s):(a({err:"User not set!"}),console.log("User graph net set!"),s)}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,